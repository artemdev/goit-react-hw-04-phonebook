{"version":3,"sources":["components/section.js","components/contactList.js","components/contactForm.js","components/filter.js","App.js","reportWebVitals.js","index.js"],"names":["Section","title","children","ContactList","contacts","filter","deleteContact","item","name","toLowerCase","includes","map","number","onClick","id","shortid","generate","ContactForm","addContact","action","onSubmit","htmlFor","type","Filter","setFilter","onChange","e","value","target","parsedLocalContacts","JSON","parse","localStorage","getItem","localContacts","length","mockupContacts","App","useState","setContacts","setName","setNumber","useEffect","setItem","stringify","contactListProps","filteredContacts","contact","preventDefault","alert","newContact","prev","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2791fb7.chunk.js","sourcesContent":["export default function Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n","import Section from './section';\nimport shortid from 'shortid';\n\nexport default function ContactList({ contacts, filter, deleteContact }) {\n  const filterContacts = () => {\n    return contacts.filter(item => item.name.toLowerCase().includes(filter));\n  };\n\n  return (\n    <Section title=\"Contacts\">\n      {filterContacts().map(item => (\n        <div key={shortid.generate()}>\n          {item.name} {item.number}\n          <button onClick={() => deleteContact(item.id)}>delete</button>\n        </div>\n      ))}\n    </Section>\n  );\n}\n","import Section from './section';\n\nexport default function ContactForm({ addContact }) {\n  return (\n    <Section title=\"Phonebook\">\n      <form action=\"\" onSubmit={addContact}>\n        <label htmlFor=\"name\">\n          Name <br />\n          <input type=\"text\" id=\"name\" />\n        </label>\n        <br />\n        <label htmlFor=\"number\">\n          Number <br />\n          <input type=\"text\" id=\"number\" />\n        </label>\n        <br />\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    </Section>\n  );\n}\n","export default function Filter({ setFilter }) {\n  const changeFilter = e => {\n    const { value } = e.target;\n    setFilter(value.toLowerCase());\n  };\n  return (\n    <label htmlFor=\"filter\">\n      <input type=\"text\" id=\"filter\" onChange={changeFilter} />\n    </label>\n  );\n}\n","import './App.css';\nimport { useState, useEffect } from 'react';\nimport shortid from 'shortid';\nimport ContactList from './components/contactList';\nimport ContactForm from './components/contactForm';\nimport Filter from './components/filter';\n\nconst parsedLocalContacts = JSON.parse(localStorage.getItem('contacts'));\nconst localContacts = parsedLocalContacts &&\n  [...parsedLocalContacts].length > 0 && [...parsedLocalContacts];\nconst mockupContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    return localContacts || mockupContacts;\n  });\n  const [filter, setFilter] = useState('');\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = e => {\n    e.preventDefault();\n    const { name, number } = e.target;\n\n    setName(name);\n    setNumber(number);\n\n    //name validation\n    if (contacts.filter(item => item.name === name.value).length > 0) {\n      alert('user already exists');\n      return;\n    }\n\n    const newContact = {\n      name: name.value,\n      number: number.value,\n      id: shortid.generate(),\n    };\n    setContacts(prev => [...prev, newContact]);\n  };\n\n  const deleteContact = id => {\n    const filteredContacts = contacts.filter(contact => contact.id !== id);\n    setContacts(filteredContacts);\n  };\n\n  const contactListProps = {\n    contacts: contacts,\n    filter: filter,\n    deleteContact: deleteContact,\n  };\n\n  return (\n    <div>\n      <ContactForm addContact={addContact} />\n      <Filter setFilter={setFilter} />\n      <ContactList {...contactListProps} />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}