{"version":3,"sources":["components/section.js","components/contactList.js","components/contactForm.js","components/filter.js","components/counter.js","App.js","reportWebVitals.js","index.js"],"names":["Section","title","children","ContactList","contacts","deleteContact","map","item","name","number","onClick","id","shortid","generate","ContactForm","action","onSubmit","this","props","addContact","htmlFor","type","Component","Filter","onChange","changeFilter","Counter","useState","count","setCount","useEffect","document","storedLocalContacts","JSON","parse","localStorage","getItem","INITIAL_STATE","length","filter","App","state","e","preventDefault","target","invalidName","value","contact","newContacts","setState","prevState","setItem","stringify","toLowerCase","includes","alert","contactListProps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"2QACe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACrC,OACI,oCACI,6BACKD,IAEJC,KCJE,SAASC,EAAT,GAAmD,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,cAC9C,OACE,cAACL,EAAD,CAASC,MAAM,WAAf,SACGG,EAASE,KAAI,SAAAC,GAAI,OAChB,gCACG,IACAA,EAAKC,KAFR,IAEeD,EAAKE,OAAQ,IAC1B,wBAAQC,QAAS,kBAAML,EAAcE,EAAKI,KAA1C,sBAHQC,IAAQC,iB,ICkBXC,E,uKArBX,OACE,cAACd,EAAD,CAASC,MAAM,YAAf,SACE,uBAAMc,OAAO,GAAGC,SAAUC,KAAKC,MAAMC,WAArC,UACE,wBAAOC,QAAQ,OAAf,kBACO,uBACL,uBAAOC,KAAK,OAAOV,GAAG,YAExB,uBACA,wBAAOS,QAAQ,SAAf,oBACS,uBACP,uBAAOC,KAAK,OAAOV,GAAG,cAExB,uBAEA,wBAAQU,KAAK,SAAb,kC,GAhBgBC,aCcXC,E,uKAVP,OAEI,uBAAOH,QAAQ,SAAf,SACI,uBAAOC,KAAK,OAAOV,GAAG,SAASa,SAAUP,KAAKC,MAAMO,qB,GAP/CH,a,QCAN,SAASI,IAAW,IAAD,EACNC,mBAAS,GADH,mBACzBC,EADyB,KAClBC,EADkB,KAMhC,OAJAC,qBAAU,WACRC,SAAS9B,MAAQ2B,KAIjB,gCACE,mFAAcA,EAAd,yBACA,wBAAQlB,QAAS,kBAAMmB,EAASD,EAAQ,IAAxC,qFCJN,IAAMI,EAAsBC,KAAKC,MAAMC,aAAaC,QAAQ,aAItDC,EAAgB,CACpBjC,SAJoB4B,GACpB,YAAIA,GAAqBM,OAAS,GADd,YACuBN,IAGhB,CACzB,CAAErB,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEE,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,cAEhD8B,OAAQ,GACR/B,KAAM,GACNC,OAAQ,IA+EK+B,E,4MA3EbC,M,eACKJ,G,EAGLlB,WAAa,SAAAuB,GACXA,EAAEC,iBADc,MAESD,EAAEE,OAAnBpC,EAFQ,EAERA,KAAMC,EAFE,EAEFA,OAEd,IAAI,EAAKoC,YAAYrC,EAAKsC,OAA1B,CAEA,IAAMC,EAAU,CACdvC,KAAMA,EAAKsC,MACXrC,OAAQA,EAAOqC,MACfnC,GAAIC,IAAQC,YAERmC,EAAW,sBAAO,EAAKP,MAAMrC,UAAlB,CAA4B2C,IAE7C,EAAKE,UAAS,SAAAC,GACZ,MAAO,CACL1C,KAAMA,EAAKsC,MACXrC,OAAQA,EAAOqC,MACf1C,SAAS,GAAD,mBAAM8C,EAAU9C,UAAhB,CAA0B2C,QAGtCZ,aAAagB,QAAQ,WAAYlB,KAAKmB,UAAUJ,M,EAElD3C,cAAgB,SAAAM,GACd,IAAMqC,EAAc,EAAKP,MAAMrC,SAASmC,QACtC,SAAAQ,GAAO,OAAIA,EAAQpC,KAAOA,KAE5B,EAAKsC,SAAL,2BAAmB,EAAKR,OAAxB,IAA+BrC,SAAS,YAAK4C,MAE7Cb,aAAagB,QAAQ,WAAYlB,KAAKmB,UAAUJ,K,EAGlD5C,SAAW,WACT,OAAO,EAAKqC,MAAMrC,SAASmC,QAAO,SAAAhC,GAAI,OACpCA,EAAKC,KAAK6C,cAAcC,SAAS,EAAKb,MAAMF,Y,EAIhDd,aAAe,SAAAiB,GAAM,IACXI,EAAUJ,EAAEE,OAAZE,MACR,EAAKG,UAAS,SAAAC,GACZ,OAAO,2BAAKA,GAAZ,IAAuBX,OAAQO,EAAMO,oB,EAKzCR,YAAc,SAAArC,GAEZ,OADmB,EAAKiC,MAAMrC,SAASmC,QAAO,SAAAhC,GAAI,OAAIA,EAAKC,OAASA,KACrD8B,OAAS,IACtBiB,MAAM,wBACC,I,uDAMT,IAAMC,EAAmB,CACvBpD,SAAUa,KAAKb,WACfC,cAAeY,KAAKZ,eAGtB,OACE,gCACE,cAACqB,EAAD,IACA,cAAC,EAAD,CAAaP,WAAYF,KAAKE,aAC9B,cAAC,EAAD,CAAQM,aAAcR,KAAKQ,eAC3B,cAACtB,EAAD,eAAiBqD,W,GAtEPlC,aCXHmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrC,SAASsC,eAAe,SAM1BZ,M","file":"static/js/main.b14cbec3.chunk.js","sourcesContent":["\nexport default function Section({ title, children }) {\n    return (\n        <section>\n            <h2>\n                {title}\n            </h2>\n            {children}\n        </section>\n    )\n}","import Section from './section';\nimport shortid from 'shortid';\n\nexport default function ContactList({ contacts, deleteContact }) {\n  return (\n    <Section title=\"Contacts\">\n      {contacts.map(item => (\n        <div key={shortid.generate()}>\n          {' '}\n          {item.name} {item.number}{' '}\n          <button onClick={() => deleteContact(item.id)}>delete</button>\n        </div>\n      ))}\n    </Section>\n  );\n}\n","import { Component } from 'react';\nimport Section from './section';\nclass ContactForm extends Component {\n  render() {\n    return (\n      <Section title=\"Phonebook\">\n        <form action=\"\" onSubmit={this.props.addContact}>\n          <label htmlFor=\"name\">\n            Name <br />\n            <input type=\"text\" id=\"name\" />\n          </label>\n          <br />\n          <label htmlFor=\"number\">\n            Number <br />\n            <input type=\"text\" id=\"number\" />\n          </label>\n          <br />\n\n          <button type=\"submit\">Add contact</button>\n        </form>\n      </Section>\n    );\n  }\n}\n\nexport default ContactForm;\n","import { Component } from 'react'\n\nclass Filter extends Component {\n\n\n    render() {\n        return (\n\n            <label htmlFor=\"filter\">\n                <input type=\"text\" id=\"filter\" onChange={this.props.changeFilter} />\n            </label>\n\n        )\n    }\n}\n\nexport default Filter\n","import React, { useEffect, useState } from 'react';\n\nexport default function Counter() {\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    document.title = count;\n  });\n\n  return (\n    <div>\n      <p>Вы нажали {count} раз</p>\n      <button onClick={() => setCount(count + 1)}>Нажми на меня</button>\n    </div>\n  );\n}\n","import './App.css';\nimport { Component } from 'react';\nimport shortid from 'shortid';\nimport ContactList from './components/contactList';\nimport ContactForm from './components/contactForm';\nimport Filter from './components/filter';\nimport Counter from './components/counter';\nconst storedLocalContacts = JSON.parse(localStorage.getItem('contacts'));\nconst localContacts = storedLocalContacts &&\n  [...storedLocalContacts].length > 0 && [...storedLocalContacts];\n\nconst INITIAL_STATE = {\n  contacts: localContacts || [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ],\n  filter: '',\n  name: '',\n  number: '',\n};\n\nclass App extends Component {\n  state = {\n    ...INITIAL_STATE,\n  };\n\n  addContact = e => {\n    e.preventDefault();\n    const { name, number } = e.target;\n\n    if (this.invalidName(name.value)) return;\n\n    const contact = {\n      name: name.value,\n      number: number.value,\n      id: shortid.generate(),\n    };\n    const newContacts = [...this.state.contacts, contact];\n\n    this.setState(prevState => {\n      return {\n        name: name.value,\n        number: number.value,\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n    localStorage.setItem('contacts', JSON.stringify(newContacts));\n  };\n  deleteContact = id => {\n    const newContacts = this.state.contacts.filter(\n      contact => contact.id !== id,\n    );\n    this.setState({ ...this.state, contacts: [...newContacts] });\n\n    localStorage.setItem('contacts', JSON.stringify(newContacts));\n  };\n\n  contacts = () => {\n    return this.state.contacts.filter(item =>\n      item.name.toLowerCase().includes(this.state.filter),\n    );\n  };\n\n  changeFilter = e => {\n    const { value } = e.target;\n    this.setState(prevState => {\n      return { ...prevState, filter: value.toLowerCase() };\n    });\n  };\n\n  //name validation\n  invalidName = name => {\n    const foundUsers = this.state.contacts.filter(item => item.name === name);\n    if (foundUsers.length > 0) {\n      alert('user already exists');\n      return true;\n    }\n    return false;\n  };\n\n  render() {\n    const contactListProps = {\n      contacts: this.contacts(),\n      deleteContact: this.deleteContact,\n    };\n\n    return (\n      <div>\n        <Counter />\n        <ContactForm addContact={this.addContact} />\n        <Filter changeFilter={this.changeFilter} />\n        <ContactList {...contactListProps} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}