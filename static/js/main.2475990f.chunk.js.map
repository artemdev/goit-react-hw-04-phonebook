{"version":3,"sources":["components/section.js","components/contactList.js","components/contactForm.js","components/filter.js","App.js","reportWebVitals.js","index.js"],"names":["Section","title","children","ContactList","this","props","contacts","deleteContact","map","item","name","number","onClick","id","shortid","generate","Component","ContactForm","action","onSubmit","addContact","htmlFor","type","Filter","onChange","changeFilter","storedLocalContacts","JSON","parse","localStorage","getItem","INITIAL_STATE","length","filter","App","state","e","preventDefault","target","invalidName","value","contact","newContacts","setState","prevState","setItem","stringify","toLowerCase","includes","alert","contactListProps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2475990f.chunk.js","sourcesContent":["\nexport default function Section({ title, children }) {\n    return (\n        <section>\n            <h2>\n                {title}\n            </h2>\n            {children}\n        </section>\n    )\n}","import { Component } from 'react'\nimport Section from './section'\nimport shortid from 'shortid'\n\nclass ContactList extends Component {\n\n\n\n    render() {\n\n        const { contacts, deleteContact } = this.props\n\n        return (\n            <Section title=\"Contacts\">\n                {contacts.map((item) =>\n                    <div key={shortid.generate()}> {item.name} {item.number} <button onClick={() => deleteContact(item.id)}>delete</button></ div>)}\n            </Section>\n        )\n    }\n}\n\nexport default ContactList","import { Component } from 'react'\nimport Section from './section'\nclass ContactForm extends Component {\n\n    render() {\n        return (\n            <Section title=\"Phonebook\">\n                <form action=\"\" onSubmit={this.props.addContact}>\n\n                    <label htmlFor=\"name\">\n                        Name <br />\n                        <input type=\"text\" id=\"name\" />\n                    </label>\n                    <br />\n                    <label htmlFor=\"number\">\n                        Number <br />\n                        <input type=\"text\" id=\"number\" />\n                    </label>\n                    <br />\n\n                    <button type=\"submit\">Add contact</button>\n                </form>\n            </Section>\n\n        )\n    }\n}\n\nexport default ContactForm\n","import { Component } from 'react'\n\nclass Filter extends Component {\n\n\n    render() {\n        return (\n\n            <label htmlFor=\"filter\">\n                <input type=\"text\" id=\"filter\" onChange={this.props.changeFilter} />\n            </label>\n\n        )\n    }\n}\n\nexport default Filter\n","import './App.css';\nimport { Component } from 'react';\nimport shortid from 'shortid';\nimport ContactList from './components/contactList';\nimport ContactForm from './components/contactForm';\nimport Filter from './components/filter';\n\nconst storedLocalContacts = JSON.parse(localStorage.getItem('contacts'));\nconst localContacts = storedLocalContacts &&\n  [...storedLocalContacts].length > 0 && [...storedLocalContacts];\n\nconst INITIAL_STATE = {\n  contacts: localContacts || [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ],\n  filter: '',\n  name: '',\n  number: '',\n};\n\nclass App extends Component {\n  state = {\n    ...INITIAL_STATE,\n  };\n\n  addContact = e => {\n    e.preventDefault();\n    const { name, number } = e.target;\n\n    if (this.invalidName(name.value)) return;\n\n    const contact = {\n      name: name.value,\n      number: number.value,\n      id: shortid.generate(),\n    };\n    const newContacts = [...this.state.contacts, contact];\n\n    this.setState(prevState => {\n      return {\n        name: name.value,\n        number: number.value,\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n    localStorage.setItem('contacts', JSON.stringify(newContacts));\n  };\n  deleteContact = id => {\n    const newContacts = this.state.contacts.filter(\n      contact => contact.id !== id,\n    );\n    this.setState({ ...this.state, contacts: [...newContacts] });\n\n    localStorage.setItem('contacts', JSON.stringify(newContacts));\n  };\n\n  contacts = () => {\n    return this.state.contacts.filter(item =>\n      item.name.toLowerCase().includes(this.state.filter),\n    );\n  };\n\n  changeFilter = e => {\n    const { value } = e.target;\n    this.setState(prevState => {\n      return { ...prevState, filter: value.toLowerCase() };\n    });\n  };\n\n  //name validation\n  invalidName = name => {\n    const foundUsers = this.state.contacts.filter(item => item.name === name);\n    if (foundUsers.length > 0) {\n      alert('user already exists');\n      return true;\n    }\n    return false;\n  };\n\n  render() {\n    const contactListProps = {\n      contacts: this.contacts(),\n      deleteContact: this.deleteContact,\n    };\n\n    return (\n      <div>\n        <ContactForm addContact={this.addContact} />\n        <Filter changeFilter={this.changeFilter} />\n        <ContactList {...contactListProps} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}